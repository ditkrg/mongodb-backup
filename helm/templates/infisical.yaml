{{- $baseValues := . }}

{{- range $name, $values := .Values.jobs }}

{{- if not ( $values.infisical ) }}
  {{- continue }}
{{- end }}

{{- if not ( $values.infisical.enabled ) }}
  {{- continue }}
{{- end }}
---


apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: {{ include "common.names.infisical.secret" . }}
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
spec:
  authentication:
    serviceToken:
      serviceTokenSecretReference:
        secretName: {{ $values.infisical.sealedSecret.name | default  ( printf  "%s-infisical-token" $name ) }}
        secretNamespace: {{ $values.infisical.sealedSecret.namespace | default $baseValues.Release.Namespace }}
      secretsScope:
        secretsPath: {{ $values.infisical.secretsScope.secretsPath | required "infisical.secretsScope.secretsPath value is required" }}
        envSlug: {{ $values.infisical.secretsScope.envSlug | required "infisical.secretsScope.envSlug value is required" }}
  managedSecretReference:
    secretName: {{ $values.infisical.managedSecret.name | default  ( printf  "%s-managed" $name ) }}
    secretNamespace: {{  $values.infisical.managedSecret.namespace | default $baseValues.Release.Namespace }}
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: {{ $values.infisical.sealedSecret.name | default  ( printf  "%s-infisical-token" $name ) }}
  namespace: {{ $values.infisical.sealedSecret.namespace | default $baseValues.Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
spec:
  encryptedData:
    infisicalToken: {{ $values.infisical.sealedSecret.token | required "infisical.tokenSecret.encryptedData value is required" }}
{{ end }}

